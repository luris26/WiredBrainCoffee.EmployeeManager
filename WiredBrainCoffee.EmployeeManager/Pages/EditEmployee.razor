
@page "/employee/edit/{employeeId:int}"
@inject IDbContextFactory<EmployeeManagerDbContext> ContextFactory
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer
<h1>EditEmployee</h1>
@if(Employee is null && !isBusy)
{
    <div class="alert alert-danger">Employee with id @EmployeeId was not found</div>

}
else
{
    <EmployeeForm Employee="@Employee"
        IsBusy="@isBusy"
        Departments="@Departments"
        IsEdit="true"
        OnSubmit="@HandleSubmit"
        OnCancel="NavegateToOverViewPage"/>
}
@if(ErrorMessage is not null)
{
    <br />
    <div class="alert alert-danger">@ErrorMessage</div>
}
@code {
    [Parameter]
    public int EmployeeId { get; set; }
    private Employee? Employee { get; set; }
    private Department[]? Departments { get; set; }
    private bool isBusy { get; set; }
    private string? ErrorMessage { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        isBusy = true;
        try
        {
            using var context = ContextFactory.CreateDbContext();
            Departments = await context.Departments.AsNoTracking().
                OrderBy(dept => dept.Name).
                    ToArrayAsync();
            Employee = await context.Employees.
                AsNoTracking().
                FirstOrDefaultAsync(emp => emp.Id == EmployeeId);
        }
        finally
        {
            isBusy = false;
        }
    }
    private async Task HandleSubmit(bool isValid)
    {
        if(Employee is null || isBusy || !isValid)
        {
            ErrorMessage = null;
            return;
        }
        isBusy = true;
        try
        {
            using var context = ContextFactory.CreateDbContext();
            context.Update(Employee);
            await context.SaveChangesAsync();
            NavegateToOverViewPage();
        }
        catch(Exception ex)
        {
            ErrorMessage = $"Error while saving employee: {ex.Message}";
        }
        finally
        {
            isBusy = false;
        }
    }
    private void NavegateToOverViewPage()
    {
        NavigationManager.NavigateTo($"/employees/list/{StateContainer.EmployeeOverviewPage}");
    }
}
